import pandas as pd
import csv
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation
from IPython import display

#data = pd.read_csv("drive/MyDrive/RoboIndus/drawing_dataset_hand.csv", sep=",")
xyseries = [-8.65,7.69,
-8.65,7.6,
-8.61,7.48,
-8.56,7.39,
-8.49,7.27,
-8.46,7.2,
-8.37,7.12,
-8.31,7.06,
-8.25,6.97,
-8.19,6.93,
-8.14,6.85,
-8.05,6.77,
-7.98,6.67,
-7.93,6.64,
-7.87,6.57,
-7.81,6.5,
-7.73,6.44,
-7.67,6.35,
-7.58,6.28,
-7.5,6.18,
-7.46,6.13,
-7.41,6.04,
-7.34,5.96,
-7.26,5.83,
-7.21,5.74,
-7.19,5.66,
-7.14,5.58,
-7.1,5.5,
-7.05,5.39,
-7.02,5.28,
-6.97,5.17,
-6.9,5.04,
-6.83,5.01,
-6.83,4.93,
-6.76,4.82,
-6.73,4.74,
-6.67,4.66,
-6.59,4.59,
-6.55,4.51,
-6.5,4.46,
-6.42,4.38,
-6.35,4.31,
-6.29,4.21,
-6.22,4.2,
-6.2,4.12,
-6.16,4.02,
-6.16,3.91,
-6.16,3.84,
-6.17,3.76,
-6.17,3.69,
-6.21,3.62,
-6.23,3.49,
-6.23,3.38,
-6.24,3.29,
-6.14,3.31,
-6.06,3.31,
-5.97,3.31,
-5.88,3.31,
-5.79,3.31,
-5.71,3.31,
-5.62,3.31,
-5.53,3.31,
-5.44,3.31,
-5.36,3.31,
-5.27,3.31,
-5.18,3.31,
-5.09,3.31,
-5.01,3.31,
-4.92,3.31,
-4.83,3.31,
-4.75,3.33,
-4.75,3.46,
-4.75,3.55,
-4.73,3.63,
-4.72,3.76,
-4.7,3.85,
-4.7,3.94,
-4.7,4.03,
-4.69,4.13,
-4.65,4.23,
-4.66,4.3,
-4.64,4.4,
-4.6,4.59,
-4.57,4.67,
-4.48,4.73,
-4.4,4.81,
-4.31,4.9,
-4.23,4.96,
-4.17,5.05,
-4.11,5.16,
-4.08,5.27,
-4.02,5.31,
-4.0,5.4,
-3.97,5.48,
-3.93,5.57,
-3.88,5.68,
-3.85,5.77,
-3.79,5.86,
-3.77,5.95,
-3.74,6.04,
-3.7,6.14,
-3.68,6.24,
-3.62,6.34,
-3.59,6.48,
-3.54,6.62,
-3.51,6.7,
-3.47,6.79,
-3.4,6.92,
-3.33,6.98,
-3.33,7.05,
-3.28,7.15,
-3.25,7.26,
-3.18,7.37,
-3.13,7.53,
-3.07,7.63,
-3.02,7.74,
-2.96,7.83,
-2.91,7.92,
-2.96,8.01,
-3.02,8.08,
-3.1,8.12,
-3.19,8.15,
-3.29,8.13,
-3.37,8.11,
-3.42,8.04,
-3.51,7.98,
-3.54,7.88,
-3.59,7.88,
-3.63,7.81,
-3.71,7.74,
-3.74,7.66,
-3.79,7.58,
-3.8,7.49,
-3.86,7.47,
-3.87,7.37,
-3.94,7.29,
-3.97,7.19,
-4.03,7.08,
-4.09,6.96,
-4.12,6.88,
-4.18,6.85,
-4.26,6.82,
-4.35,6.82,
-4.44,6.85,
-4.53,6.87,
-4.61,6.9,
-4.72,6.95,
-4.7,7.0,
-4.79,7.05,
-4.85,7.12,
-4.93,7.18,
-4.96,7.27,
-5.01,7.36,
-5.07,7.48,
-5.1,7.6,
-5.14,7.7,
-5.13,7.75,
-5.13,7.84,
-5.14,7.96,
-5.14,8.05,
-5.14,8.14,
-5.16,8.26,
-5.16,8.35,
-5.16,8.44,
-5.16,8.53,
-5.16,8.61,
-5.16,8.7,
-5.16,8.79,
-5.16,8.88,
-5.16,8.97,
-5.16,9.06,
-5.16,9.17,
-5.19,9.28,
-5.18,9.34,
-5.19,9.45,
-5.19,9.54,
-5.19,9.63,
-5.21,9.71,
-5.21,9.81,
-5.21,9.9,
-5.21,9.99,
-5.22,10.08,
-5.22,10.17,
-5.25,10.28,
-5.29,10.4,
-5.36,10.48,
-5.44,10.52,
-5.53,10.54,
-5.62,10.5,
-5.7,10.43,
-5.73,10.32,
-5.74,10.19,
-5.75,10.08,
-5.75,9.99,
-5.75,9.9,
-5.75,9.81,
-5.75,9.72,
-5.75,9.63,
-5.75,9.54,
-5.74,9.45,
-5.74,9.36,
-5.74,9.27,
-5.74,9.18,
-5.74,9.09,
-5.74,9.0,
-5.74,8.91,
-5.74,8.83,
-5.76,8.76,
-5.76,8.67,
-5.76,8.58,
-5.77,8.5,
-5.77,8.41,
-5.77,8.32,
-5.78,8.18,
-5.8,8.06,
-5.8,7.97,
-5.81,7.91,
-5.87,7.92,
-5.96,7.91,
-5.99,8.0,
-6.05,8.11,
-6.05,8.19,
-6.06,8.27,
-6.09,8.38,
-6.12,8.47,
-6.12,8.56,
-6.12,8.64,
-6.14,8.72,
-6.19,8.81,
-6.16,8.84,
-6.16,8.95,
-6.19,9.08,
-6.22,9.17,
-6.25,9.28,
-6.28,9.37,
-6.31,9.46,
-6.33,9.54,
-6.34,9.63,
-6.37,9.72,
-6.39,9.81,
-6.4,9.91,
-6.45,10.01,
-6.44,10.13,
-6.49,10.27,
-6.54,10.4,
-6.49,10.41,
-6.58,10.49,
-6.67,10.54,
-6.75,10.55,
-6.84,10.51,
-6.92,10.45,
-6.96,10.31,
-6.93,10.16,
-6.93,10.05,
-6.87,9.95,
-6.86,9.84,
-6.82,9.75,
-6.79,9.63,
-6.79,9.55,
-6.75,9.45,
-6.73,9.31,
-6.73,9.21,
-6.69,9.12,
-6.67,9.02,
-6.66,8.92,
-6.66,8.83,
-6.64,8.7,
-6.61,8.61,
-6.61,8.53,
-6.6,8.41,
-6.58,8.3,
-6.58,8.21,
-6.58,8.13,
-6.55,8.02,
-6.54,7.93,
-6.51,7.83,
-6.51,7.74,
-6.51,7.66,
-6.57,7.6,
-6.65,7.65,
-6.7,7.75,
-6.74,7.83,
-6.77,7.93,
-6.83,8.07,
-6.86,8.19,
-6.92,8.28,
-6.98,8.38,
-7.04,8.47,
-7.08,8.55,
-7.12,8.63,
-7.15,8.71,
-7.17,8.76,
-7.23,8.85,
-7.24,8.94,
-7.27,9.07,
-7.33,9.2,
-7.39,9.3,
-7.43,9.41,
-7.48,9.54,
-7.54,9.62,
-7.59,9.7,
-7.69,9.71,
-7.76,9.66,
-7.83,9.55,
-7.84,9.42,
-7.85,9.32,
-7.81,9.22,
-7.77,9.11,
-7.72,9.03,
-7.71,8.91,
-7.66,8.84,
-7.65,8.75,
-7.6,8.66,
-7.56,8.54,
-7.5,8.42,
-7.44,8.29,
-7.41,8.17,
-7.38,8.08,
-7.35,7.98,
-7.28,7.87,
-7.27,7.77,
-7.24,7.69,
-7.22,7.59,
-7.19,7.47,
-7.15,7.35,
-7.1,7.26,
-7.05,7.15,
-7.05,7.06,
-7.05,6.97,
-7.06,6.88,
-7.12,6.78,
-7.2,6.75,
-7.29,6.81,
-7.38,6.87,
-7.44,6.94,
-7.52,6.99,
-7.58,7.07,
-7.67,7.13,
-7.76,7.21,
-7.84,7.26,
-7.88,7.32,
-7.96,7.4,
-8.02,7.47,
-8.05,7.54,
-8.14,7.61,
-8.18,7.7,
-8.25,7.76,
-8.34,7.84,
-8.43,7.86,
-8.52,7.85,
-8.61,7.79
]
xseries = []
yseries = []
for i in range(0, 701, 2):
  xseries.append(xyseries[i])
for i in range(1, 702, 2):
  yseries.append(xyseries[i])
  
data = pd.DataFrame({'X':xseries, 'Y':yseries})
print(data)

#13 Ã© o alcance max do nosso drawbot

x = data.X
y = data.Y
for i in range(351):
  print(str(x[i])+','+str(y[i])+',')

plt.plot(x,y)
plt.show()

fig = plt.figure()
ax = plt.axes(xlim = (-13, 0), ylim = (0, 13))
traco, = ax.plot([], [], lw=1)
plt.gca().set_aspect(1)
def animate(frame_num):
    traco.set_data(x[:frame_num+1], y[:frame_num+1])
    return traco

anim = FuncAnimation(fig, animate, frames=488, interval = 20)
video = anim.to_html5_video()
html = display.HTML(video)
display.display(html)
plt.close()
